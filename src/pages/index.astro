---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";
import CostComponent from "../components/CostComponent.tsx";

const providers = await getCollection("providers");
---

<Layout>
	<h1 class="text-3xl font-bold my-8">
		Cloud-Native Geospatial Storage Cheatsheet
	</h1>
	<p>
		A collaboratively maintained resource to compare cloud storage platforms. <a href="https://github.com/bdon/cng-storage-guide">Source code on GitHub</a>
	</p>
	<p>
		Want to read about formats for publishing to cloud storage? Check out the <a class="text-blue-500 underline" target="_blank" href="https://guide.cloudnativegeo.org">Cloud Native Geospatial Formats Guide.</a>
	</p>
	<p>
		Ideas for other comparison dimensions? examples:
		<ul>Performance (throughput,latency)</ul>
		<ul>S3 compatibility</ul>
		<ul>Number of regions</ul>
		<ul>Jurisdiction (EU, GDPR, etc)</ul>
	</p>
	<h2 class="text-2xl font-bold my-4">Cost Estimate</h2>
	<CostComponent client:only="solid-js" providers={providers}/>
	<h2 class="text-2xl font-bold my-4">Pricing Table</h2>
	<table class="table-auto">
		<thead>
			<tr>
				<td></td>
				<td class="px-4">Cost per GB/Month</td>
				<td class="px-4">Egress per GB</td>
				<td class="px-4">currency</td>
				<td></td>
			</tr>
		</thead>
		<tbody>
		{
	    providers.map((provider) => <tr>
				<td>{provider.data.name}</td>
				<td class="px-4">{provider.data.cost_per_gb_stored}</td>
				<td class="px-4">{provider.data.cost_per_gb_egress}</td>
				<td class="px-4">{provider.data.currency}</td>
				<td><a href={provider.data.pricing_page} class="underline text-blue-500" target="_blank">pricing</a></td>
	    </tr>)
	  }
		</tbody>
	</table>
	<p>
		Free account-level allowances are not included. 
	</p>
</Layout>
